{"version":3,"file":"static/js/517.559031de.chunk.js","mappings":"0NACA,GAAgB,aAAa,8BAA8B,cAAc,+BAA+B,KAAO,wBAAwB,gBAAgB,iCAAiC,SAAW,4BAA4B,aAAa,8BAA8B,OAAS,0BAA0B,GAAK,sBAAsB,IAAM,uBAAuB,mBAAmB,qC,SCuFxX,EA/EkB,WAEd,IAAMA,GAASC,EAAAA,EAAAA,MAEf,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,GAEjBC,EAAG,UAAMC,EAAAA,EAAN,kBAAuBT,EAAOU,QAAQC,WAAtC,YAAoDC,EAAAA,GAC7D,GAAwDC,EAAAA,EAAAA,KAAhDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAoBC,EAArC,EAAwBC,aAExBC,EAAAA,EAAAA,YAAU,WAINF,EAAeR,GAHE,SAAAW,GACbf,EAAae,QAGlB,CAACH,EAAgBR,IAEpB,IAMMY,EAAcjB,EAAUkB,cAAgBlB,EAAUkB,aAAaC,UAAU,EAAG,GAC5EC,EAPc,SAACC,GACjB,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAUJ,EAAO,GACvB,MAAM,GAAN,OAAUC,EAAV,aAAoBG,EAApB,OAIYC,CAAY1B,EAAUoB,SAChCO,EAAU,8DAA0D3B,EAAU4B,aAC9EC,EAAY,0CAAsC7B,EAAU8B,eAC5DC,EAAS/B,EAAU+B,QAAU/B,EAAU+B,OAAOC,KAAI,SAAAC,GAAK,gBACtDA,EAAMC,SACVC,KAAK,MACFC,EAASpC,EAAUqC,aACnBC,EAAOF,EAAS,EAAIG,EAAAA,GAAY,GAChCC,EAAQJ,EAAS,EAAIG,EAAAA,IAAa,GAClCE,EAAUvC,EAAIwC,UAAUC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAO7C,EAAU6C,MAAM,cAAgB,SAUnF,OAAO,qBAASC,UAAWP,EAAAA,cAApB,UACF3B,IAAS,2DACRD,GAAWyB,EAAS,IAClB,iCACA,SAAC,KAAD,CAAMW,GAAG,IAAT,UACI,mBAAQD,UAAWP,EAAAA,eAAnB,4BAEJ,0BAAKvC,EAAUgD,OAAM,iCAAS/B,EAAT,WACjB,0BACI,0BAAOc,IADX,YACkC,0BAAOX,QAEzC,iBAAK0B,UAAWP,EAAAA,KAAhB,WACI,iBAAKO,UAAWP,EAAAA,iBAAhB,WACI,gBAAKO,UAAWP,EAAAA,SAAiBU,MAAO,CAAEC,gBAAgB,OAAD,OAASrB,OAClE,6BACI,gBAAKsB,IAAKxB,EAAYyB,IAAI,8BAGlC,iBAAKN,UAAWP,EAAAA,gBAAhB,WACI,gBAAKO,UAAS,UAAKP,EAAAA,cAAL,YAA6BD,EAA7B,YAAqCE,GAAnD,UACI,iBAAKM,UAAWP,EAAAA,OAAhB,UACKH,GACD,uCAGZ,wBAAKpC,EAAUqD,WACf,uBAAIrD,EAAUsD,kBAGlB,oBAAQR,UAAWP,EAAAA,oBAA4BgB,QArCnC,WACpBrD,EAAIsD,WACAxD,EAAU6C,GACV7C,EAAUgD,MACVrB,EACA3B,EAAUkB,eAgCN,UAA2EuB,EAA3E","sources":["webpack://allflicks/./src/components/MoviePage/MoviePage.module.scss?b3c1","components/MoviePage/MoviePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie-page\":\"MoviePage_movie-page__t8ySR\",\"back-button\":\"MoviePage_back-button__zgImI\",\"hero\":\"MoviePage_hero__FPk8Q\",\"cover-wrapper\":\"MoviePage_cover-wrapper__phTNw\",\"backdrop\":\"MoviePage_backdrop__IMguR\",\"score-card\":\"MoviePage_score-card__OgGYI\",\"rating\":\"MoviePage_rating__4EExJ\",\"ok\":\"MoviePage_ok__5iFQD\",\"bad\":\"MoviePage_bad__HINRw\",\"watchlist-button\":\"MoviePage_watchlist-button__vQ6N3\"};","import { useState, useEffect, useContext } from 'react'\nimport { useParams, Link} from 'react-router-dom'\n\nimport useFetch from '../../hooks/useFetch'\nimport { baseUrl, apiKey } from '../../constants/global'\nimport FavContext from '../../store/fav-context'\n\nimport styles from './MoviePage.module.scss'\n\nconst MoviePage = () => {\n    // movie.title.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-')}` \n    const params = useParams()\n\n    const [movieData, setMovieData] = useState([])\n\n    const ctx = useContext(FavContext)\n\n    const url = `${baseUrl}/movie/${params.movieId.toString()}?${apiKey}`\n    const { loading, error, sendRequest: fetchMovieData } = useFetch()\n\n    useEffect(() => {\n        const addMovie = movie => {\n            setMovieData(movie)\n        }\n        fetchMovieData(url, addMovie)\n    }, [fetchMovieData, url])\n\n    const convertTime = (time) => {\n        const hours = Math.floor(time / 60)\n        const minutes = time % 60\n        return `${hours}h ${minutes}min`\n    }\n\n    const releaseYear = movieData.release_date && movieData.release_date.substring(0, 4)\n    const runtime = convertTime(movieData.runtime)\n    const posterPath = `https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${movieData.poster_path}`\n    const backdropPath = `https://image.tmdb.org/t/p/w500/${movieData.backdrop_path}`\n    const genres = movieData.genres && movieData.genres.map(genre => (\n        `${genre.name}`\n    )).join(', ')\n    const rating = movieData.vote_average\n    const isOk = rating < 7 ? styles.ok : ''\n    const isBad = rating < 5 ? styles.bad : ''\n    const isFaved = ctx.favMovies.find(el => el.id === movieData.id) ? 'Remove from' : 'Add to'\n\n    const addToFavHandler = () => {\n        ctx.onAddMovie(\n            movieData.id,\n            movieData.title,\n            posterPath,\n            movieData.release_date)\n    }\n\n    return <section className={styles['movie-page']}>\n        {error && <p>Error: please try again later.</p>}\n        {!loading && rating > 0 &&\n            <>\n            <Link to=\"/\">\n                <button className={styles['back-button']}>&larr; Back</button>\n            </Link>    \n            <h2>{movieData.title}<span> ({releaseYear})</span></h2>\n                <p>\n                    <span>{genres}</span> &#8226; <span>{runtime}</span>\n                </p>\n                <div className={styles.hero} >\n                    <div className={styles['cover-wrapper']}>\n                        <div className={styles.backdrop} style={{ backgroundImage: `url(${backdropPath}` }}></div>\n                        <figure>\n                            <img src={posterPath} alt=\"Poster of the movie\" />\n                        </figure>\n                    </div>\n                    <div className={styles['info-wrapper']}>\n                        <div className={`${styles['score-card']} ${isOk} ${isBad}`}>\n                            <div className={styles.rating}>\n                                {rating}\n                                <p>Score</p>\n                            </div>\n                        </div>\n                    <h3>{movieData.tagline}</h3>\n                    <p>{movieData.overview}</p>\n                    </div>\n                </div>\n                <button className={styles['watchlist-button']} onClick={addToFavHandler}>{ isFaved } your watchlist</button>\n            </>\n        }\n    </section>\n}\n\nexport default MoviePage"],"names":["params","useParams","useState","movieData","setMovieData","ctx","useContext","FavContext","url","baseUrl","movieId","toString","apiKey","useFetch","loading","error","fetchMovieData","sendRequest","useEffect","movie","releaseYear","release_date","substring","runtime","time","hours","Math","floor","minutes","convertTime","posterPath","poster_path","backdropPath","backdrop_path","genres","map","genre","name","join","rating","vote_average","isOk","styles","isBad","isFaved","favMovies","find","el","id","className","to","title","style","backgroundImage","src","alt","tagline","overview","onClick","onAddMovie"],"sourceRoot":""}